CREATE TABLE IF NOT EXISTS oauth_client_details (
  client_id VARCHAR(256) NOT NULL,
  resource_ids VARCHAR(256) DEFAULT NULL,
  client_secret VARCHAR(256) DEFAULT NULL,
  scope VARCHAR(256) DEFAULT NULL,
  authorized_grant_types VARCHAR(256) DEFAULT NULL,
  web_server_redirect_uri VARCHAR(256) DEFAULT NULL,
  authorities VARCHAR(256) DEFAULT NULL,
  access_token_validity INTEGER DEFAULT NULL,
  refresh_token_validity INTEGER DEFAULT NULL,
  additional_information VARCHAR(4096) DEFAULT NULL,
  autoapprove VARCHAR(256) DEFAULT NULL,
  CONSTRAINT pk_oauth_client_details PRIMARY KEY (client_id)
);

INSERT INTO oauth_client_details
(
    client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri,
    authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove
)
SELECT 'client', '$2a$10$o/wcBGM95avKr8MzfHPfK.oGW2gKnKby2rSQLSOwMVVG4cqe5tsQK', null, 'read,write', -- pwd1234
       'authorization_code,password, implicit, refresh_token',
       null, 'ROLE_TRUSTED_CLIENT', 36000, 2592000, null, null
  FROM dual
 WHERE NOT EXISTS(SELECT * FROM oauth_client_details WHERE client_id = 'client');

CREATE TABLE IF NOT EXISTS user
(
    uid INTEGER GENERATED BY DEFAULT AS IDENTITY,
    user_name VARCHAR(32) NOT NULL,
    password VARCHAR(100) NOT NULL,
    user_type INTEGER NOT NULL,
    created_at TIMESTAMP NOT NULL,

    CONSTRAINT pk_user PRIMARY KEY (uid)
);

ALTER TABLE user DROP CONSTRAINT IF EXISTS uk_user;
ALTER TABLE user ADD CONSTRAINT uk_user UNIQUE (user_name);

INSERT INTO user
(
    user_name, password, user_type, created_at
)
SELECT 'admin', '$2a$10$WOYfXpW.QbK./rvCxIP4he7GthvbOO4JrPB87V8HIJpAXM1rL1vDO', 1, NOW() -- admin1234
  FROM dual
 WHERE NOT EXISTS (SELECT * from user WHERE user_name = 'admin');

CREATE TABLE IF NOT EXISTS refresh_token
(
    uid INTEGER GENERATED BY DEFAULT AS IDENTITY,
    user_uid INTEGER NOT NULL,
    refresh_token VARCHAR(2000),
    CONSTRAINT pk_refresh_token PRIMARY KEY (uid),
    CONSTRAINT fk_refresh_token_1 FOREIGN KEY (user_uid) REFERENCES user(uid) ON DELETE CASCADE,
);

CREATE TABLE IF NOT EXISTS device
(
    uid INTEGER GENERATED BY DEFAULT AS IDENTITY,
    device_id CHAR(64) NOT NULL,
    device_name VARCHAR(50) NOT NULL,
    CONSTRAINT pk_device PRIMARY KEY (uid)
);

ALTER TABLE device DROP CONSTRAINT IF EXISTS uk_device;
ALTER TABLE device ADD CONSTRAINT uk_device UNIQUE (device_id);

CREATE INDEX IF NOT EXISTS ix_device ON device (device_name);

CREATE TABLE IF NOT EXISTS internet_banking_stat
(
    uid INTEGER GENERATED BY DEFAULT AS IDENTITY,
    year SMALLINT NOT NULL,
    rate DECIMAL NOT NULL,
    CONSTRAINT pk_internet_banking_stat PRIMARY KEY (uid)
);

CREATE INDEX IF NOT EXISTS ix_internet_banking_stat_1 ON internet_banking_stat (year);

CREATE TABLE IF NOT EXISTS internet_banking_stat_detail
(
    uid INTEGER GENERATED BY DEFAULT AS IDENTITY,
    internet_banking_stat_uid INTEGER NOT NULL,
    device_id INTEGER NOT NULL,
    rate DECIMAL NOT NULL,
    CONSTRAINT pk_internet_banking_stat_detail PRIMARY KEY (uid),
    CONSTRAINT fk_internet_banking_stat_detail_1 FOREIGN KEY (internet_banking_stat_uid) REFERENCES internet_banking_stat(uid) ON DELETE CASCADE,
    CONSTRAINT fk_internet_banking_stat_detail_2 FOREIGN KEY (device_id) REFERENCES device(uid) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE INDEX IF NOT EXISTS ix_internet_banking_stat_detail_1 ON internet_banking_stat (rate);

